{"version":3,"sources":["controllers/projects.js","components/projectsComponent.js","App.js","serviceWorker.js","index.js","logo.svg","const.js"],"names":["ProjectController","getProjects","a","axios","get","method","headers","getProjectInfo","id","url","name","branch","branches","require","getBranches","Projects","props","state","projects","changes","selectedProjectId","undefined","filtered","search","isLoading","hasError","error","pages","showDetails","fechaDesde","Date","fechaHasta","selBranch","filtrarPorFecha","filtradas","filter","x","fecha","created_at","setState","executeScroll","ref","myRef","window","scrollTo","current","offsetTop","exctractInfo","data","map","reg","arr","description","match","length","ticket","ejecutables","descripcion_usr","stored_procedures","configuraciones","React","createRef","list","split","forEach","aux","replace","push","this","sort","b","text","title","toUpperCase","includes","console","log","project","then","catch","err","reverse","branchName","setPages","link","Container","style","marginLeft","Row","Col","padding","key","Card","width","height","Body","Title","Text","last_activity_at","toLocaleDateString","Footer","Button","variant","margin","onClick","loadProjectInfo","loadBranches","find","fontSize","backgroundColor","Dropdown","Toggle","size","Menu","Item","commit","onSelect","evt","eventKey","Spinner","animation","Form","Group","as","controlId","Label","column","sm","Control","value","onKeyPress","event","preventDefault","onChange","target","type","placeholder","date","Table","striped","bordered","hover","responsive","hasOwnProperty","trim","source_branch","author","Component","App","className","Navbar","bg","marginBottom","Brand","href","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.cced1f42.chunk.js","sourcesContent":["import axios from \"axios\";\n\nvar ProjectController = {\n  getProjects: async () => {\n    return axios.get(\"https://gitlab.com/api/v4/groups/3291864/projects\", {\n      method: \"GET\",\n      headers: {\n        \"PRIVATE-TOKEN\": \"QPMEZZky8yBAkiQwQjT6\",\n      },\n    });\n  },\n  getProjectInfo: async (id, url, name, branch) => {\n    var branches = require(\"../const\");\n    if (!branch) branch = branches[name];\n    if (!url)\n      url = `https://gitlab.com/api/v4/projects/${id}/merge_requests?state=merged&per_page=1000&target_branch=${branch}`;\n    return axios.get(url, {\n      method: \"GET\",\n      headers: {\n        \"PRIVATE-TOKEN\": \"QPMEZZky8yBAkiQwQjT6\",\n      },\n    });\n  },\n  getBranches: async (id, url) => {\n    if (!url)\n      url = `https://gitlab.com/api/v4/projects/${id}/repository/branches?search=release`;\n    return axios.get(url, {\n      method: \"GET\",\n      headers: {\n        \"PRIVATE-TOKEN\": \"QPMEZZky8yBAkiQwQjT6\",\n      },\n    });\n  },\n};\n\nexport default ProjectController;\n","import React, { Component} from \"react\";\nimport project from \"../controllers/projects\";\nimport {\n  Button,\n  Row,\n  Col,\n  Container,\n  Card,\n  Table,\n  Form,\n  Spinner,\n  Dropdown,\n} from \"react-bootstrap\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  state = {\n    projects: [],\n    changes: [],\n    selectedProjectId: undefined,\n    filtered: [],\n    search: \"\",\n    isLoading: false,\n    hasError: false,\n    error: \"\",\n    pages: [],\n    showDetails: true,\n    fechaDesde: new Date(),\n    fechaHasta: new Date(),\n    branches: [],\n    selBranch: undefined,\n  };\n  filtrarPorFecha = () => {\n    var filtradas = this.state.changes.filter((x) => {\n      var fecha = new Date(x.created_at);\n      return fecha >= this.state.fechaDesde && fecha <= this.state.fechaHasta;\n    });\n\n    this.setState({ filtered: filtradas });\n  };\n  executeScroll = () => scrollToRef(this.myRef);\n  exctractInfo = async (data) => {\n    data = data.map((x) => {\n      var reg = /\\[Ticket\\]\\:(\\ *#*\\w*)/;\n      var arr = x.description.match(reg);\n      if (arr && arr.length > 1) x.ticket = arr[1];\n      reg = /(\\[Ejecutables\\]:)([\\ |\\w|\\.]*)/;\n      arr = x.description.match(reg);\n      if (arr && arr.length > 2) x.ejecutables = arr[2];\n      reg = /(\\[Descripcion\\]:)(.*)/;\n      arr = x.description.match(reg);\n      if (arr && arr.length > 2) x.descripcion_usr = arr[2];\n\n      reg = /(\\[SP\\]:)(.*)/;\n      arr = x.description.match(reg);\n      if (arr && arr.length > 2) x.stored_procedures = arr[2];\n\n      reg = /(\\[Configuracion\\]:)(.*)/;\n      arr = x.description.match(reg);\n      if (arr && arr.length > 2) x.configuraciones = arr[2];\n\n      return x;\n    });\n    this.setState({ changes: data, filtered: data, isLoading: false });\n  };\n\n  setPages(pages) {\n    let list = [];\n    let p = pages.split(\",\");\n    p.forEach((x) => {\n      let aux = x.split(\";\");\n      //first: 0\n      //prev: 1\n      //next: 2\n      //last: 3\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"first\")\n        list.push({\n          id: 0,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"prev\")\n        list.push({\n          id: 1,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"next\")\n        list.push({\n          id: 2,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"last\")\n        list.push({\n          id: 3,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n    });\n\n    this.setState({\n      pages: list.sort((a, b) => {\n        return a.id - b.id;\n      }),\n    });\n  }\n  filter(text) {\n    if (text === \"\" || !text) {\n      this.setState({ search: \"\", filtered: this.state.changes });\n      return;\n    }\n    this.setState({ search: text }, () => {\n      var filter = this.state.changes;\n      filter = filter.filter((x) => {\n        return (\n          x.title.toUpperCase().includes(this.state.search.toUpperCase()) ||\n          x.description.toUpperCase().includes(this.state.search.toUpperCase())\n        );\n      });\n      console.log(filter);\n      this.setState({ filtered: filter });\n    });\n  }\n  componentDidMount() {\n    this.getProjects(undefined);\n  }\n  getProjects() {\n    project\n      .getProjects()\n      .then((data) => {\n        this.setState({ projects: data.data });\n      })\n      .catch((err) => console.log(err));\n  }\n  loadBranches(id, url) {\n    this.setState({ isLoading: true, selectedProjectId: id }, () => {\n      project\n        .getBranches(id, url)\n        .then((data) => {\n          this.setState({ branches: data.data.reverse(), isLoading: false });\n          console.log(data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({ isLoading: false, hasError: true, error: err });\n        });\n    });\n  }\n  loadProjectInfo(id, url, name, branchName) {\n    if (id !== 12562383) {\n      this.setState({ branches: [], selBranch: \"\" });\n    }\n    this.setState({ isLoading: true, selectedProjectId: id }, () => {\n      project\n        .getProjectInfo(id, url, name, branchName)\n        .then((data) => {\n          console.log(data);\n          this.setPages(data.headers.link);\n          this.exctractInfo(data.data).then(() => {});\n          this.executeScroll();\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({ isLoading: false, hasError: true, error: err });\n        });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Container style={{ marginLeft: \"10rem\" }}>\n          <h1>Proyectos</h1>\n          <h6>\n            Seleccione un proyecto para ver los cambios realizados por\n            desarrollo\n          </h6>\n          <br></br>\n          <Row>\n            {this.state.projects.map((x) => (\n              <Col style={{ padding: \"2px\" }} key={x.id}>\n                <Card style={{ width: \"14rem\", height: \"14rem\" }}>\n                  <Card.Body>\n                    <Card.Title>{x.name}</Card.Title>\n                    <Card.Text>\n                      Ultima actualizacion:{\" \"}\n                      {new Date(x.last_activity_at).toLocaleDateString()}\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button\n                      variant=\"danger\"\n                      style={{ margin: \"0.1rem\" }}\n                      onClick={() => {\n                        if (x.id !== 12562383)\n                          this.loadProjectInfo(x.id, undefined, x.name);\n                        else this.loadBranches(x.id, undefined);\n                      }}\n                    >\n                      Ver cambios\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n        <hr></hr>\n        <div>\n          <h1 ref={this.myRef}>\n            {this.state.projects.length > 0 && this.state.selectedProjectId >= 0\n              ? this.state.projects.find(\n                  (x) => x.id === this.state.selectedProjectId\n                ).name\n              : undefined}\n          </h1>\n          {this.state.selBranch && this.state.selBranch !== \"\" ? (\n            <div>\n              <span\n                style={{\n                  fontSize: \"0.2em !important\",\n                  backgroundColor: \"yellow\",\n                }}\n              >\n                <i>{\"(\" + this.state.selBranch + \")\"}</i>\n              </span>\n              <br></br>\n              <br></br>\n            </div>\n          ) : undefined}\n\n          {!this.state.isLoading && this.state.branches.length > 0 ? (\n            <Dropdown>\n              <Dropdown.Toggle\n                variant=\"secondary\"\n                id=\"dropdown-basic\"\n                size=\"sm\"\n              >\n                Seleccione un release\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {this.state.branches.map((x) => {\n                  return (\n                    <Dropdown.Item\n                      key={x.commit.id}\n                      onSelect={(evt) => {\n                        this.setState({ selBranch: evt });\n                        this.loadProjectInfo(\n                          this.state.selectedProjectId,\n                          undefined,\n                          \"\",\n                          evt\n                        );\n                      }}\n                      eventKey={x.name}\n                    >\n                      {x.name}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          ) : undefined}\n        </div>\n        <br></br>\n        {this.state.isLoading ? (\n          <Spinner\n            style={{ margin: \"40px\" }}\n            animation=\"grow\"\n            variant=\"danger\"\n          />\n        ) : this.state.changes.length > 0 ? (\n          <Form>\n            <Form.Group as={Row} controlId=\"searchInput\">\n              <Form.Label column sm={2}>\n                Buscar\n              </Form.Label>\n              <Col sm={3}>\n                <Form.Control\n                  value={this.state.search}\n                  onKeyPress={(event) => {\n                    console.log(event.key);\n                    if (event.key === \"Enter\") event.preventDefault();\n                  }}\n                  onChange={(event) => this.filter(event.target.value)}\n                  type=\"text\"\n                  placeholder=\"Ingrese su busqueda\"\n                ></Form.Control>\n              </Col>\n              <Col sm={2}>\n                <DateTimePicker\n                  value={this.state.fechaDesde}\n                  onChange={(date) => {\n                    this.setState({ fechaDesde: date });\n                  }}\n                />\n              </Col>\n              <Col sm={2}>\n                <DateTimePicker\n                  value={this.state.fechaHasta}\n                  onChange={(date) => {\n                    this.setState({ fechaHasta: date });\n                  }}\n                />\n              </Col>\n              <Col sm={2}>\n                <Button\n                  onClick={() => {\n                    this.filtrarPorFecha();\n                  }}\n                >\n                  Filtrar por fecha\n                </Button>\n              </Col>\n            </Form.Group>\n            <Button variant=\"default\" onClick={() => this.filter()}>\n              X Limpiar filtros\n            </Button>\n          </Form>\n        ) : undefined}\n        <br></br>\n        {this.state.filtered.length > 0 ? (\n          <div>\n            <Table size=\"x-sm\" striped bordered hover responsive>\n              <thead>\n                <tr>\n                  <th>Fecha</th>\n                  <th>Ticket</th>\n                  <th>Ejecutables</th>\n                  <th>Descripcion</th>\n                  <th>SP</th>\n                  <th>Configuraciones</th>\n                  <th>Autor</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.filtered.map((x) => (\n                  <tr key={x.id}>\n                    <td>{new Date(x.created_at).toLocaleDateString()}</td>\n                    <td>\n                      {x.hasOwnProperty(\"ticket\")\n                        ? x.ticket.includes(\"#\")\n                          ? x.ticket.trim()\n                          : \"#\" + x.ticket.trim()\n                        : x.source_branch}\n                    </td>\n                    <td>\n                      {x.hasOwnProperty(\"ejecutables\") ? x.ejecutables : \"\"}\n                    </td>\n                    <td>\n                      <b>{x.title}</b>\n                      <br></br>\n                      {x.hasOwnProperty(\"descripcion_usr\")\n                        ? x.descripcion_usr\n                        : x.description}\n                    </td>\n                    <td>\n                      {x.hasOwnProperty(\"stored_procedures\")\n                        ? x.stored_procedures\n                        : \"-\"}\n                    </td>\n                    <td>\n                      {x.hasOwnProperty(\"configuraciones\")\n                        ? x.configuraciones\n                        : \"-\"}\n                    </td>\n                    <td>{x.author.name}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            {/* {this.state.pages.length > 0 ? \n            <Pagination>\n              {this.state.pages.map(x => \n                {\n                  \n                  if (x.id === 0)\n                    return <Pagination.First onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  if (x === 1)\n                    return <Pagination.Prev  onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  else if (x === 2)\n                    return <Pagination.Next onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  else\n                    return <Pagination.Last onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                })}\n            </Pagination>\n          : undefined} */}\n          </div>\n        ) : undefined}\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Projects from \"./components/projectsComponent\";\nimport { Navbar } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" style={{marginBottom: \"40px\"}}>\n        <Navbar.Brand href=\"#\">\n          <span>Control de versiones</span> \n        </Navbar.Brand>\n      </Navbar>\n      <Projects />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports =  {\n  \"KernWebPatientDoctor.API\": \"master\", \n  \"KernLis\": \"release_1.4.6.X\", \n  \"KERN_MIC_PLUS\": \"release-1.0.x\",\n  \"KernIX\": \"master\", \n  \"KernValidadorOnline\": \"master\"\n}"],"sourceRoot":""}