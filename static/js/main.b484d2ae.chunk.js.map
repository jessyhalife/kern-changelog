{"version":3,"sources":["controllers/projects.js","components/projectsComponent.js","App.js","serviceWorker.js","index.js","logo.svg","const.js"],"names":["ProjectController","getProjects","a","axios","get","method","headers","getProjectInfo","id","url","name","branches","require","branch","Projects","props","state","projects","changes","selectedProjectId","undefined","filtered","search","isLoading","hasError","error","pages","showDetails","fechaDesde","Date","fechaHasta","filtrarPorFecha","filtradas","filter","x","fecha","created_at","setState","executeScroll","ref","myRef","window","scrollTo","current","offsetTop","exctractInfo","data","React","createRef","list","split","forEach","aux","replace","push","this","sort","b","text","title","includes","description","console","log","project","then","catch","err","setPages","link","Container","style","marginLeft","Row","map","Col","padding","key","Card","width","height","Body","Title","Text","last_activity_at","toLocaleDateString","Footer","Button","variant","margin","onClick","loadProjectInfo","length","find","Spinner","animation","Form","Group","as","controlId","Label","column","sm","Control","value","onKeyPress","event","preventDefault","onChange","target","type","placeholder","date","Table","striped","bordered","hover","source_branch","author","Component","App","className","Navbar","bg","marginBottom","Brand","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.b484d2ae.chunk.js","sourcesContent":["import axios from 'axios'\n\nvar ProjectController = {\n  getProjects: async () => {\n    return axios.get(\"https://gitlab.com/api/v4/groups/3291864/projects\", {\n      method: 'GET',\n      headers: {\n        'PRIVATE-TOKEN': 'QPMEZZky8yBAkiQwQjT6'\n      }\n    })\n  },\n  getProjectInfo: async (id, url, name) => {\n    var branches = require('../const');\n    let branch = branches[name];\n    if (!url) url = `https://gitlab.com/api/v4/projects/${id}/merge_requests?state=merged&per_page=1000&target_branch=${branch}`\n    return axios.get(url, {\n      method: 'GET',\n      headers: {\n        'PRIVATE-TOKEN': 'QPMEZZky8yBAkiQwQjT6'\n      }\n    })\n  }\n}\n\nexport default ProjectController;\n\n\n","import React, { Component, useRef } from \"react\";\nimport project from \"../controllers/projects\";\nimport {\n  Button,\n  Row,\n  Col,\n  Container,\n  Card,\n  Table,\n  Form,\n  Spinner,\n  Jumbotron,\n  Pagination,\n} from \"react-bootstrap\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  state = {\n    projects: [],\n    changes: [],\n    selectedProjectId: undefined,\n    filtered: [],\n    search: \"\",\n    isLoading: false,\n    hasError: false,\n    error: \"\",\n    pages: [],\n    showDetails: true,\n    fechaDesde: new Date(),\n    fechaHasta: new Date(),\n  };\n  filtrarPorFecha = () => {\n    var filtradas = this.state.changes.filter((x) => {\n      var fecha = new Date(x.created_at);\n      return (\n        fecha >= this.state.fechaDesde && fecha <= this.state.fechaHasta\n      );\n    });\n\n    this.setState({ filtered: filtradas });\n  };\n  executeScroll = () => scrollToRef(this.myRef);\n  exctractInfo = async (data) => {\n    this.setState({ changes: data, filtered: data, isLoading: false });\n  };\n\n  setPages(pages) {\n    let list = [];\n    let p = pages.split(\",\");\n    p.forEach((x) => {\n      let aux = x.split(\";\");\n      //first: 0\n      //prev: 1\n      //next: 2\n      //last: 3\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"first\")\n        list.push({\n          id: 0,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"prev\")\n        list.push({\n          id: 1,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"next\")\n        list.push({\n          id: 2,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n      if (aux[1].split(\"=\")[1].replace('\"', \"\").replace('\"', \"\") === \"last\")\n        list.push({\n          id: 3,\n          url: aux[0].replace('\"', \"\").replace(\"<\", \"\").replace(\">\", \"\"),\n        });\n    });\n\n    this.setState({\n      pages: list.sort((a, b) => {\n        return a.id - b.id;\n      }),\n    });\n  }\n  filter(text) {\n    if (text === \"\" || !text) {\n      this.setState({ search: \"\", filtered: this.state.changes });\n      return;\n    }\n    this.setState({ search: text }, () => {\n      var filter = this.state.changes;\n      filter = filter.filter((x) => {\n        return (\n          x.title.includes(this.state.search) ||\n          x.description.includes(this.state.search)\n        );\n      });\n      console.log(filter);\n      this.setState({ filtered: filter });\n    });\n  }\n  componentDidMount() {\n    this.getProjects(undefined);\n  }\n  getProjects() {\n    project\n      .getProjects()\n      .then((data) => {\n        this.setState({ projects: data.data });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  loadProjectInfo(id, url, name) {\n    this.setState({ isLoading: true, selectedProjectId: id }, () => {\n      project\n        .getProjectInfo(id, url, name)\n        .then((data) => {\n          console.log(data);\n          this.setPages(data.headers.link);\n          this.exctractInfo(data.data).then(() => {});\n          this.executeScroll();\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({ isLoading: false, hasError: true, error: err });\n        });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Container style={{ marginLeft: \"10rem\" }}>\n          <h1>Proyectos</h1>\n          <h6>\n            Seleccione un proyecto para ver los cambios realizados por\n            desarrollo\n          </h6>\n          <br></br>\n          <Row>\n            {this.state.projects.map((x) => (\n              <Col style={{ padding: \"2px\" }} key={x.id}>\n                <Card style={{ width: \"14rem\", height: \"14rem\" }}>\n                  <Card.Body>\n                    <Card.Title>{x.name}</Card.Title>\n                    <Card.Text>\n                      Ultima actualizacion:{\" \"}\n                      {new Date(x.last_activity_at).toLocaleDateString()}\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Button\n                      variant=\"danger\"\n                      style={{ margin: \"0.1rem\" }}\n                      onClick={() => {\n                        this.loadProjectInfo(x.id, undefined, x.name);\n                      }}\n                    >\n                      Ver cambios\n                    </Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n        <hr></hr>\n        <div>\n          <h1 ref={this.myRef}>\n            {this.state.projects.length > 0 && this.state.selectedProjectId >= 0\n              ? this.state.projects.find(\n                  (x) => x.id === this.state.selectedProjectId\n                ).name\n              : undefined}\n          </h1>\n        </div>\n        {this.state.isLoading ? (\n          <Spinner\n            style={{ margin: \"40px\" }}\n            animation=\"grow\"\n            variant=\"danger\"\n          />\n        ) : this.state.changes.length > 0 ? (\n          <Form>\n            <Form.Group as={Row} controlId=\"searchInput\">\n              <Form.Label column sm={2}>\n                Buscar\n              </Form.Label>\n              <Col sm={3}>\n                <Form.Control\n                  value={this.state.search}\n                  onKeyPress={(event) => {\n                    console.log(event.key);\n                    if (event.key === \"Enter\") event.preventDefault();\n                  }}\n                  onChange={(event) => this.filter(event.target.value)}\n                  type=\"text\"\n                  placeholder=\"Ingrese su busqueda\"\n                ></Form.Control>\n              </Col>\n              <Col sm={2}>\n                <DateTimePicker\n                  value={this.state.fechaDesde}\n                  onChange={(date) => {\n                    this.setState({ fechaDesde: date });\n                  }}\n                />\n              </Col>\n              <Col sm={2}>\n                <DateTimePicker\n                  value={this.state.fechaHasta}\n                  onChange={(date) => {\n                    this.setState({ fechaHasta: date });\n                  }}\n                />\n              </Col>\n              <Col sm={2}>\n                <Button\n                  onClick={() => {\n                    this.filtrarPorFecha();\n                  }}\n                >\n                  Filtrar por fecha\n                </Button>\n              </Col>\n            </Form.Group>\n            <Button variant=\"default\" onClick={() =>this.filter()}>X Limpiar filtros</Button>\n          </Form>\n          \n        ) : undefined}\n        <br></br>\n        {this.state.filtered.length > 0 ? (\n          <Container>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Fecha</th>\n                  <th>Ticket</th>\n                  <th>Cambios</th>\n                  <th>Autor</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.filtered.map((x) => (\n                  <tr key={x.id}>\n                    <td>{new Date(x.created_at).toLocaleDateString()}</td>\n                    <td>{x.source_branch}</td>\n                    <td>\n                      <b>{x.title}</b>\n                      <br></br>\n                      {x.description}\n                    </td>\n                    <td>{x.author.name}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            {/* {this.state.pages.length > 0 ? \n            <Pagination>\n              {this.state.pages.map(x => \n                {\n                  \n                  if (x.id === 0)\n                    return <Pagination.First onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  if (x === 1)\n                    return <Pagination.Prev  onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  else if (x === 2)\n                    return <Pagination.Next onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  else\n                    return <Pagination.Last onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                })}\n            </Pagination>\n          : undefined} */}\n          </Container>\n        ) : undefined}\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Projects from \"./components/projectsComponent\";\nimport { Navbar } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" style={{marginBottom: \"40px\"}}>\n        <Navbar.Brand href=\"#\">\n          <span>Control de versiones</span> \n        </Navbar.Brand>\n      </Navbar>\n      <Projects />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports =  {\n  \"KernWebPatientDoctor.API\": \"master\", \n  \"KernLis\": \"release_1.4.5.X\", \n  \"KERN_MIC_PLUS\": \"release-1.0.x\",\n  \"KernIX\": \"master\", \n  \"KernValidadorOnline\": \"master\"\n}"],"sourceRoot":""}