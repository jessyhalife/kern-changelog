{"version":3,"sources":["logo.svg","const.js","controllers/projects.js","components/projectsComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectController","getProjects","a","axios","get","method","headers","getProjectInfo","id","url","name","branches","require","branch","Projects","props","state","projects","changes","selectedProjectId","undefined","filtered","search","isLoading","hasError","error","pages","showDetails","executeScroll","ref","myRef","window","scrollTo","current","offsetTop","exctractInfo","data","setState","React","createRef","list","split","forEach","x","aux","replace","push","this","sort","b","text","filter","title","includes","description","console","log","project","then","catch","err","setPages","link","Container","style","marginLeft","Row","map","Col","padding","key","Card","width","height","Body","Title","Text","Date","last_activity_at","toLocaleDateString","Footer","Button","variant","margin","onClick","loadProjectInfo","length","find","Spinner","animation","Form","Group","as","controlId","Label","column","sm","Control","value","onKeyPress","event","preventDefault","onChange","target","type","placeholder","Table","striped","bordered","hover","created_at","source_branch","author","Component","App","className","Navbar","bg","marginBottom","Brand","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qLAAAA,EAAOC,QAAU,IAA0B,kC,sCCA3CD,EAAOC,QAAW,CAChB,2BAA4B,SAC5B,QAAW,kBACX,cAAiB,gBACjB,OAAU,SACV,oBAAuB,W,iLCmBVC,EAtBS,CACtBC,YAAY,WAAD,4BAAE,sBAAAC,EAAA,+EACJC,IAAMC,IAAI,oDAAqD,CACpEC,OAAQ,MACRC,QAAS,CACP,gBAAiB,2BAJV,2CAAF,kDAAC,GAQZC,eAAe,WAAD,4BAAE,WAAOC,EAAIC,EAAKC,GAAhB,iBAAAR,EAAA,6DACVS,EAAWC,EAAQ,IACnBC,EAASF,EAASD,GACjBD,IAAKA,EAAG,6CAAyCD,EAAzC,oEAAuGK,IAHtG,kBAIPV,IAAMC,IAAIK,EAAK,CACpBJ,OAAQ,MACRC,QAAS,CACP,gBAAiB,2BAPP,2CAAF,uDAAC,I,gECqKFQ,E,YAxKb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAKRC,MAAQ,CACNC,SAAU,GACVC,QAAS,GACTC,uBAAmBC,EACnBC,SAAU,GACVC,OAAQ,GACRC,WAAW,EACXC,UAAU,EACVC,MAAO,GACPC,MAAO,GACPC,aAAa,GAhBG,EAoBlBC,cAAgB,kBAvBGC,EAuBe,EAAKC,MAvBZC,OAAOC,SAAS,EAAGH,EAAII,QAAQC,WAAxC,IAACL,GAGD,EAqBjBM,aArBiB,uCAqBF,WAAOC,GAAP,SAAAlC,EAAA,sDACd,EAAKmC,SAAS,CAAEnB,QAASkB,EAAMf,SAAUe,EAAMb,WAAW,IAD5C,2CArBE,sDAEhB,EAAKO,MAAQQ,IAAMC,YAFH,E,sEAyBTb,GACP,IAAIc,EAAO,GACHd,EAAMe,MAAM,KAClBC,SAAQ,SAAAC,GACR,IAAIC,EAAMD,EAAEF,MAAM,KAK6C,UAA3DG,EAAI,GAAGH,MAAM,KAAK,GAAGI,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KACrDL,EAAKM,KAAK,CAAEtC,GAAI,EAAGC,IAAKmC,EAAI,GAAGC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,MACjB,SAA3DD,EAAI,GAAGH,MAAM,KAAK,GAAGI,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KACrDL,EAAKM,KAAK,CAAEtC,GAAI,EAAGC,IAAKmC,EAAI,GAAGC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,MACjB,SAA3DD,EAAI,GAAGH,MAAM,KAAK,GAAGI,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KACrDL,EAAKM,KAAK,CAAEtC,GAAI,EAAGC,IAAKmC,EAAI,GAAGC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,MACjB,SAA3DD,EAAI,GAAGH,MAAM,KAAK,GAAGI,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KACrDL,EAAKM,KAAK,CAAEtC,GAAI,EAAGC,IAAKmC,EAAI,GAAGC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,SAIlFE,KAAKV,SAAS,CAAEX,MAAOc,EAAKQ,MAAK,SAAC9C,EAAG+C,GAAQ,OAAO/C,EAAEM,GAAKyC,EAAEzC,U,6BAExD0C,GAAO,IAAD,OAEE,KAATA,GAAgBA,EAIpBH,KAAKV,SAAS,CAAEf,OAAQ4B,IAAQ,WAC9B,IAAIC,EAAS,EAAKnC,MAAME,QACxBiC,EAASA,EAAOA,QAAO,SAAAR,GAAO,OAAOA,EAAES,MAAMC,SAAS,EAAKrC,MAAMM,SAAWqB,EAAEW,YAAYD,SAAS,EAAKrC,MAAMM,WAC9GiC,QAAQC,IAAIL,GACZ,EAAKd,SAAS,CAAEhB,SAAU8B,OAP1BJ,KAAKV,SAAS,CAAEf,OAAQ,GAAID,SAAU0B,KAAK/B,MAAME,Y,0CAWnD6B,KAAK9C,iBAAYmB,K,oCAEJ,IAAD,OACZqC,EAAQxD,cAAcyD,MAAK,SAAAtB,GACzB,EAAKC,SAAS,CAAEpB,SAAUmB,EAAKA,UAC9BuB,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,Q,sCAGdpD,EAAIC,EAAKC,GAAO,IAAD,OAC7BqC,KAAKV,SAAS,CAAEd,WAAW,EAAMJ,kBAAmBX,IAAM,WACxDiD,EAAQlD,eAAeC,EAAIC,EAAKC,GAAMgD,MAAK,SAAAtB,GACzC,EAAKyB,SAASzB,EAAK9B,QAAQwD,MAC3B,EAAK3B,aAAaC,EAAKA,MAAMsB,MAAK,eAGlC,EAAK9B,mBAEJ+B,OAAM,SAAAC,GAASL,QAAQC,IAAII,GAAM,EAAKvB,SAAS,CAAEd,WAAW,EAAOC,UAAU,EAAMC,MAAOmC,Y,+BAIvF,IAAD,OACP,OACE,6BACE,kBAACG,EAAA,EAAD,CAAWC,MAAO,CAACC,WAAY,UAC7B,yCACA,qGACA,6BACA,kBAACC,EAAA,EAAD,KACGnB,KAAK/B,MAAMC,SAASkD,KAAI,SAAAxB,GAAC,OAAI,kBAACyB,EAAA,EAAD,CAAKJ,MAAO,CAAEK,QAAS,OAASC,IAAK3B,EAAEnC,IAEnE,kBAAC+D,EAAA,EAAD,CAAOP,MAAO,CAAEQ,MAAO,QAASC,OAAQ,UACtC,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,KAAahC,EAAEjC,MACf,kBAAC6D,EAAA,EAAKK,KAAN,+BAAmC,IAAIC,KAAKlC,EAAEmC,kBAAkBC,uBAElE,kBAACR,EAAA,EAAKS,OAAN,KACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAASlB,MAAO,CAACmB,OAAQ,UAAWC,QAAS,WAAQ,EAAKC,gBAAgB1C,EAAEnC,QAAIY,EAAWuB,EAAEjC,QAA7G,uBAOR,6BACA,6BAAK,wBAAImB,IAAKkB,KAAKjB,OAChBiB,KAAK/B,MAAMC,SAASqE,OAAS,GAAKvC,KAAK/B,MAAMG,mBAAqB,EAAK4B,KAAK/B,MAAMC,SAASsE,MAAK,SAAA5C,GAAC,OAAIA,EAAEnC,KAAO,EAAKQ,MAAMG,qBAAmBT,UAAQU,IACtJ2B,KAAK/B,MAAMO,UAAY,kBAACiE,EAAA,EAAD,CAASxB,MAAO,CAAEmB,OAAQ,QAAUM,UAAU,OAAOP,QAAQ,WACjFnC,KAAK/B,MAAME,QAAQoE,OAAS,EAAI,kBAACI,EAAA,EAAD,KAChC,kBAACA,EAAA,EAAKC,MAAN,CAAYC,GAAI1B,IAAK2B,UAAU,eAC7B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,UAGA,kBAAC5B,EAAA,EAAD,CAAK4B,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CAAcC,MAAOnD,KAAK/B,MAAMM,OAAQ6E,WAAY,SAACC,GAAW7C,QAAQC,IAAI4C,EAAM9B,KAAsB,UAAb8B,EAAM9B,KAAgB8B,EAAMC,kBAAkBC,SAAU,SAACF,GAAD,OAAW,EAAKjD,OAAOiD,EAAMG,OAAOL,QAAQM,KAAK,OAAOC,YAAY,gCAGnNrF,EACX2B,KAAK/B,MAAMK,SAASiE,OAAS,EAC5B,kBAACvB,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,qCACA,sCACA,uCACA,uCAGJ,+BACG9D,KAAK/B,MAAMK,SAAS8C,KAAI,SAAAxB,GAAC,OACxB,wBAAI2B,IAAK3B,EAAEnC,IACT,4BAAK,IAAIqE,KAAKlC,EAAEmE,YAAY/B,sBAC5B,4BAAKpC,EAAEoE,eACP,4BAAI,2BAAIpE,EAAES,OAAU,6BAAUT,EAAEW,aAChC,4BAAKX,EAAEqE,OAAOtG,kBAwBtBU,O,GAjKW6F,a,QCWRC,MAZf,WACE,OACE,yBAAKC,UAAU,OACb,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQrD,MAAO,CAACsD,aAAc,SACvC,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KACjB,wDAGJ,kBAAC,EAAD,QCFcC,QACW,cAA7B1F,OAAO2F,SAASC,UAEe,UAA7B5F,OAAO2F,SAASC,UAEhB5F,OAAO2F,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzE,MAAK,SAAA0E,GACJA,EAAaC,gBAEd1E,OAAM,SAAAlC,GACL8B,QAAQ9B,MAAMA,EAAM6G,c","file":"static/js/main.90fdc6d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports =  {\n  \"KernWebPatientDoctor.API\": \"master\", \n  \"KernLis\": \"release_1.4.5.X\", \n  \"KERN_MIC_PLUS\": \"release-1.0.x\",\n  \"KernIX\": \"master\", \n  \"KernValidadorOnline\": \"master\"\n}","import axios from 'axios'\n\nvar ProjectController = {\n  getProjects: async () => {\n    return axios.get(\"https://gitlab.com/api/v4/groups/3291864/projects\", {\n      method: 'GET',\n      headers: {\n        'PRIVATE-TOKEN': 'QPMEZZky8yBAkiQwQjT6'\n      }\n    })\n  },\n  getProjectInfo: async (id, url, name) => {\n    var branches = require('../const');\n    let branch = branches[name];\n    if (!url) url = `https://gitlab.com/api/v4/projects/${id}/merge_requests?state=merged&per_page=1000&target_branch=${branch}`\n    return axios.get(url, {\n      method: 'GET',\n      headers: {\n        'PRIVATE-TOKEN': 'QPMEZZky8yBAkiQwQjT6'\n      }\n    })\n  }\n}\n\nexport default ProjectController;\n\n\n","\nimport React, { Component, useRef } from 'react';\nimport project from '../controllers/projects';\nimport { Button, Row, Col, Container, Card, Table, Form, Spinner, Jumbotron, Pagination } from 'react-bootstrap';\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)   \n\nclass Projects extends Component {\n  constructor(props){\n    super(props);\n    this.myRef = React.createRef()  \n  }\n\n\n  state = {\n    projects: [],\n    changes: [],\n    selectedProjectId: undefined,\n    filtered: [],\n    search: '',\n    isLoading: false,\n    hasError: false,\n    error: '',\n    pages: [], \n    showDetails: true\n  }\n  \n\n  executeScroll = () => scrollToRef(this.myRef)\n   exctractInfo = async (data) => {\n    this.setState({ changes: data, filtered: data, isLoading: false });\n  };\n\n  setPages(pages) {\n    let list = [];\n    let p = pages.split(',');\n    p.forEach(x => {\n      let aux = x.split(';');\n      //first: 0\n      //prev: 1\n      //next: 2\n      //last: 3\n      if (aux[1].split('=')[1].replace('\"', '').replace('\"', '') === 'first')\n        list.push({ id: 0, url: aux[0].replace('\"', '').replace('<', '').replace('>', '') });\n      if (aux[1].split('=')[1].replace('\"', '').replace('\"', '') === 'prev')\n        list.push({ id: 1, url: aux[0].replace('\"', '').replace('<', '').replace('>', '') });\n      if (aux[1].split('=')[1].replace('\"', '').replace('\"', '') === 'next')\n        list.push({ id: 2, url: aux[0].replace('\"', '').replace('<', '').replace('>', '') });\n      if (aux[1].split('=')[1].replace('\"', '').replace('\"', '') === 'last')\n        list.push({ id: 3, url: aux[0].replace('\"', '').replace('<', '').replace('>', '') });\n    }\n    );\n\n    this.setState({ pages: list.sort((a, b) => { return a.id - b.id }) });\n  }\n  filter(text) {\n    \n    if (text === '' || !text) {\n      this.setState({ search: '', filtered: this.state.changes });\n      return;\n    }\n    this.setState({ search: text }, () => {\n      var filter = this.state.changes;\n      filter = filter.filter(x => { return x.title.includes(this.state.search) || x.description.includes(this.state.search) });\n      console.log(filter);\n      this.setState({ filtered: filter });\n    });\n  }\n  componentDidMount() {\n    this.getProjects(undefined);\n  }\n  getProjects() {\n    project.getProjects().then(data => {\n      this.setState({ projects: data.data });\n    }).catch(err => console.log(err))\n  }\n\n  loadProjectInfo(id, url, name) {\n    this.setState({ isLoading: true, selectedProjectId: id }, () => {\n      project.getProjectInfo(id, url, name).then(data => {\n        this.setPages(data.headers.link);\n        this.exctractInfo(data.data).then(() => {\n\n        });\n        this.executeScroll();\n      })\n        .catch(err => { console.log(err); this.setState({ isLoading: false, hasError: true, error: err }) });\n    })\n\n  }\n  render() {\n    return (\n      <div>\n        <Container style={{marginLeft: \"10rem\"}}>\n          <h1>Proyectos</h1> \n          <h6>Seleccione un proyecto para ver los cambios realizados por desarrollo</h6>\n          <br></br> \n          <Row>\n            {this.state.projects.map(x => <Col style={{ padding: \"2px\" }} key={x.id}>\n              \n              <Card  style={{ width: '14rem', height: '14rem' }}>\n                <Card.Body>\n                  <Card.Title>{x.name}</Card.Title>\n                  <Card.Text>Ultima actualizacion:  {new Date(x.last_activity_at).toLocaleDateString()}</Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                <Button variant=\"danger\" style={{margin: '0.1rem'}} onClick={() => { this.loadProjectInfo(x.id, undefined, x.name) }}>Ver cambios</Button>\n                </Card.Footer>\n              </Card>\n            </Col>)}\n\n          </Row>\n        </Container>\n        <hr></hr>\n        <div><h1 ref={this.myRef}>\n          {this.state.projects.length > 0 && this.state.selectedProjectId >= 0 ? (this.state.projects.find(x => x.id === this.state.selectedProjectId).name) : undefined}</h1></div>\n        {this.state.isLoading ? <Spinner style={{ margin: \"40px\" }} animation=\"grow\" variant=\"danger\" />\n          : this.state.changes.length > 0 ? <Form>\n            <Form.Group as={Row} controlId=\"searchInput\">\n              <Form.Label column sm={2}>\n                Buscar\n         </Form.Label>\n              <Col sm={3}>\n                <Form.Control value={this.state.search} onKeyPress={(event) => {console.log(event.key); if(event.key ==='Enter') event.preventDefault()}}onChange={(event) => this.filter(event.target.value)} type=\"text\" placeholder=\"Ingrese su busqueda\"></Form.Control>\n              </Col>\n            </Form.Group>\n          </Form> : undefined }\n        {this.state.filtered.length > 0 ?\n          <Container>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Fecha</th>\n                  <th>Ticket</th>\n                  <th>Cambios</th>\n                  <th>Autor</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.filtered.map(x => (\n                  <tr key={x.id}>\n                    <td>{new Date(x.created_at).toLocaleDateString()}</td>\n                    <td>{x.source_branch}</td>\n                    <td><b>{x.title}</b><br></br>{x.description}</td>\n                    <td>{x.author.name}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n            {/* {this.state.pages.length > 0 ? \n            <Pagination>\n              {this.state.pages.map(x => \n                {\n                  \n                  if (x.id === 0)\n                    return <Pagination.First onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  if (x === 1)\n                    return <Pagination.Prev  onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  else if (x === 2)\n                    return <Pagination.Next onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                  else\n                    return <Pagination.Last onClick={() => this.loadProjectInfo(undefined, x.url)}/>\n                })}\n            </Pagination>\n          : undefined} */}\n\n          </Container>\n          : undefined}\n\n\n      </div>\n    );\n  }\n}\n\nexport default Projects;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Projects from \"./components/projectsComponent\";\nimport { Navbar } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" style={{marginBottom: \"40px\"}}>\n        <Navbar.Brand href=\"#\">\n          <span>Control de versiones</span> \n        </Navbar.Brand>\n      </Navbar>\n      <Projects />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}